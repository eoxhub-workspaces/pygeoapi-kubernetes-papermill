From b7c955c9ef684bc152e8c44005f5f5df22f79b0f Mon Sep 17 00:00:00 2001
From: Bernhard Mallinger <bernhard.mallinger@eox.at>
Date: Wed, 12 Jul 2023 10:45:55 +0200
Subject: [PATCH] Allow specifying `job_id` via request parameter

This is somewhat unconventional with REST design and leaves it up to the
process implementation to deal with duplicates and invalid IDs, however
it can make sense in certain use cases.

An alternative design would be to encode the desired `job_id` in the url:
`POST /processes/<process_id>/jobs/<job_id>`
This would suggest full control over the `job_id` from the client side,
so I'd prefer to pass the id via POST data. This way we can treat it as
suggestion, or possibly as a template from which the server derives the
actual id.
---
 pygeoapi/api.py                  | 2 ++
 pygeoapi/process/manager/base.py | 3 ++-
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git pygeoapi/api.py pygeoapi/api.py
index 899f5ea..f410cd8 100644
--- pygeoapi/api.py
+++ pygeoapi/api.py
@@ -3492,6 +3492,7 @@ class API:
 
         data_dict = data.get('inputs', {})
         LOGGER.debug(data_dict)
+        desired_job_id = data.get("job_id")
 
         subscriber = None
         subscriber_dict = data.get('subscriber')
@@ -3523,6 +3524,7 @@ class API:
                 data_dict,
                 execution_mode=execution_mode,
                 subscriber=subscriber,
+                desired_job_id=desired_job_id,
             )
             job_id, mime_type, outputs, status, additional_headers = result
             headers.update(additional_headers or {})
diff --git pygeoapi/process/manager/base.py pygeoapi/process/manager/base.py
index 3149e73..1c80abd 100644
--- pygeoapi/process/manager/base.py
+++ pygeoapi/process/manager/base.py
@@ -328,6 +328,7 @@ class BaseManager:
             data_dict: dict,
             execution_mode: Optional[RequestedProcessExecutionMode] = None,
             subscriber: Optional[Subscriber] = None,
+            desired_job_id: str | None = None,
     ) -> Tuple[str, Any, JobStatus, Optional[Dict[str, str]]]:
         """
         Default process execution handler
@@ -345,7 +346,7 @@ class BaseManager:
                   response
         """
 
-        job_id = str(uuid.uuid1())
+        job_id = desired_job_id or str(uuid.uuid1())
         processor = self.get_processor(process_id)
         if execution_mode == RequestedProcessExecutionMode.respond_async:
             job_control_options = processor.metadata.get(
-- 
2.34.1

